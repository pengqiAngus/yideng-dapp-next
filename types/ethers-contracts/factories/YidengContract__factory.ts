/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YidengContract,
  YidengContractInterface,
} from "../YidengContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InterestEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "EXCHANGE_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INTEREST_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ethBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastInterestCalculationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200124138038062001241833981016040819052620000349162000233565b60008351116200008b5760405162461bcd60e51b815260206004820152601460248201527f4e616d652063616e6e6f7420626520656d70747900000000000000000000000060448201526064015b60405180910390fd5b6000825111620000de5760405162461bcd60e51b815260206004820152601660248201527f53796d626f6c2063616e6e6f7420626520656d70747900000000000000000000604482015260640162000082565b60008160ff1611620001335760405162461bcd60e51b815260206004820152601f60248201527f446563696d616c73206d7573742062652067726561746572207468616e203000604482015260640162000082565b600062000141848262000347565b50600162000150838262000347565b506002805460ff191660ff9290921691909117905550620004139050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019657600080fd5b81516001600160401b0380821115620001b357620001b36200016e565b604051601f8301601f19908116603f01168101908282118183101715620001de57620001de6200016e565b81604052838152602092508683858801011115620001fb57600080fd5b600091505b838210156200021f578582018301518183018401529082019062000200565b600093810190920192909252949350505050565b6000806000606084860312156200024957600080fd5b83516001600160401b03808211156200026157600080fd5b6200026f8783880162000184565b945060208601519150808211156200028657600080fd5b50620002958682870162000184565b925050604084015160ff81168114620002ad57600080fd5b809150509250925092565b600181811c90821680620002cd57607f821691505b602082108103620002ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200034257600081815260208120601f850160051c810160208610156200031d5750805b601f850160051c820191505b818110156200033e5782815560010162000329565b5050505b505050565b81516001600160401b038111156200036357620003636200016e565b6200037b81620003748454620002b8565b84620002f4565b602080601f831160018114620003b357600084156200039a5750858301515b600019600386901b1c1916600185901b1785556200033e565b600085815260208120601f198616915b82811015620003e457888601518255948401946001909101908401620003c3565b5085821015620004035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610e1e80620004236000396000f3fe6080604052600436106100f65760003560e01c806370a082311161008f578063a9059cbb11610061578063a9059cbb14610292578063b7c47516146102c2578063d8f3790f146102d7578063dd62ed3e14610304578063e11932cf1461033c57005b806370a082311461023157806374f0314f1461025e5780637a5f0dc41461027557806395d89b411461027d57005b80632e17de78116100c85780632e17de78146101bb578063313ce567146101db57806335981fd8146102075780635b72a33a1461021c57005b806306fdde03146100ff57806314a8bd0d1461012a57806316934fc41461014e57806318160ddd146101a557005b366100fd57005b005b34801561010b57600080fd5b5061011461035c565b6040516101219190610c37565b60405180910390f35b34801561013657600080fd5b5061014061271081565b604051908152602001610121565b34801561015a57600080fd5b5061018a610169366004610ca1565b60076020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610121565b3480156101b157600080fd5b5061014060035481565b3480156101c757600080fd5b506100fd6101d6366004610cc3565b6103ea565b3480156101e757600080fd5b506002546101f59060ff1681565b60405160ff9091168152602001610121565b34801561021357600080fd5b506100fd61076c565b34801561022857600080fd5b50610140600181565b34801561023d57600080fd5b5061014061024c366004610ca1565b60046020526000908152604090205481565b34801561026a57600080fd5b506101406201518081565b6100fd61087f565b34801561028957600080fd5b5061011461097d565b34801561029e57600080fd5b506102b26102ad366004610cdc565b61098a565b6040519015158152602001610121565b3480156102ce57600080fd5b50610140606481565b3480156102e357600080fd5b506101406102f2366004610ca1565b60066020526000908152604090205481565b34801561031057600080fd5b5061014061031f366004610d06565b600560209081526000928352604080842090915290825290205481565b34801561034857600080fd5b50610140610357366004610ca1565b610b82565b6000805461036990610d39565b80601f016020809104026020016040519081016040528092919081815260200182805461039590610d39565b80156103e25780601f106103b7576101008083540402835291602001916103e2565b820191906000526020600020905b8154815290600101906020018083116103c557829003601f168201915b505050505081565b6000811161043f5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b336000908152600460205260409020548111156104955760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610436565b60006104a033610b82565b9050801561054e5780600360008282546104ba9190610d89565b909155505033600090815260046020526040812080548392906104de908490610d89565b909155505060405181815233907fc09e8938eb8648654da3e91d900f7ab69a382244393bf71538dbfdf39b1817709060200160405180910390a260405181815233907f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a42739060200160405180910390a25b600061055c61271084610d9c565b9050804710156105b85760405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e7420636f6e7472616374204554482062616c616e636044820152606560f81b6064820152608401610436565b33600090815260046020526040812080548592906105d7908490610dbe565b9250508190555082600360008282546105f09190610dbe565b909155505033600090815260076020526040902054831061062d573360009081526007602052604081208181556001810182905560020155610668565b336000908152600760205260408120805485929061064c908490610dbe565b9091555050336000908152600760205260409020426002909101555b604051600090339083908381818185875af1925050503d80600081146106aa576040519150601f19603f3d011682016040523d82523d6000602084013e6106af565b606091505b50509050806106f65760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610436565b604080518581526020810184905233917f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e910160405180910390a260405184815233907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69060200160405180910390a250505050565b600061077733610b82565b9050600081116107c05760405162461bcd60e51b81526020600482015260146024820152734e6f20696e74657265737420746f20636c61696d60601b6044820152606401610436565b33600090815260076020526040812042600290910155600380548392906107e8908490610d89565b9091555050336000908152600460205260408120805483929061080c908490610d89565b909155505060405181815233907fc09e8938eb8648654da3e91d900f7ab69a382244393bf71538dbfdf39b181770906020015b60405180910390a260405181815233907f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a42739060200160405180910390a250565b600034116108bf5760405162461bcd60e51b815260206004820152600d60248201526c09aeae6e840e6cadcc8408aa89609b1b6044820152606401610436565b60006108cd61271034610dd1565b905080600360008282546108e19190610d89565b90915550503360009081526004602052604081208054839290610905908490610d89565b90915550506040805160608101825282815242602080830182815283850192835233600081815260078452869020945185559051600185015591516002909301929092558251348152918201849052917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910161083f565b6001805461036990610d39565b60006001600160a01b0383166109d65760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610436565b33600090815260046020526040902054821115610a2c5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610436565b6000610a3733610b82565b90508015610ae5578060036000828254610a519190610d89565b90915550503360009081526004602052604081208054839290610a75908490610d89565b909155505060405181815233907fc09e8938eb8648654da3e91d900f7ab69a382244393bf71538dbfdf39b1817709060200160405180910390a260405181815233907f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a42739060200160405180910390a25b3360009081526004602052604081208054859290610b04908490610dbe565b90915550506001600160a01b03841660009081526004602052604081208054859290610b31908490610d89565b90915550506040518381526001600160a01b0385169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a360019150505b92915050565b6001600160a01b03811660009081526007602090815260408083208151606081018352815480825260018301549482019490945260029091015491810191909152908203610bd35750600092915050565b600062015180826040015142610be99190610dbe565b610bf39190610d9c565b905080600003610c07575060009392505050565b80600160648460000151610c1b9190610d9c565b610c259190610dd1565b610c2f9190610dd1565b949350505050565b600060208083528351808285015260005b81811015610c6457858101830151858201604001528201610c48565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c9c57600080fd5b919050565b600060208284031215610cb357600080fd5b610cbc82610c85565b9392505050565b600060208284031215610cd557600080fd5b5035919050565b60008060408385031215610cef57600080fd5b610cf883610c85565b946020939093013593505050565b60008060408385031215610d1957600080fd5b610d2283610c85565b9150610d3060208401610c85565b90509250929050565b600181811c90821680610d4d57607f821691505b602082108103610d6d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b7c57610b7c610d73565b600082610db957634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610b7c57610b7c610d73565b8082028115828204841417610b7c57610b7c610d7356fea26469706673582212205de5c4100faa797a5bb4572a1aa3c6dbc747dc1f7bc7f9c2cd67feba229fb99864736f6c63430008130033";

type YidengContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YidengContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YidengContract__factory extends ContractFactory {
  constructor(...args: YidengContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<YidengContract> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    ) as Promise<YidengContract>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    );
  }
  override attach(address: string): YidengContract {
    return super.attach(address) as YidengContract;
  }
  override connect(signer: Signer): YidengContract__factory {
    return super.connect(signer) as YidengContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YidengContractInterface {
    return new utils.Interface(_abi) as YidengContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YidengContract {
    return new Contract(address, _abi, signerOrProvider) as YidengContract;
  }
}
